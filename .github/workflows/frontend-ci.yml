name: Frontend CI

on:
  push:
    branches: [ main, master, develop ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-ci.yml'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-ci.yml'

env:
  NODE_VERSION: '18.x'

jobs:
  lint-and-format:
    name: Lint & Format Check
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      run: npm ci
      working-directory: ./frontend

    - name: Run ESLint
      run: npm run lint
      working-directory: ./frontend

    - name: Check TypeScript
      run: npm run type-check
      working-directory: ./frontend

  build-test:
    name: Build & Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      run: npm ci
      working-directory: ./frontend

    - name: Build application
      run: npm run build
      working-directory: ./frontend
      env:
        VITE_GA_MEASUREMENT_ID: ${{ secrets.VITE_GA_MEASUREMENT_ID }}
        VITE_PROXY_TARGET: http://localhost:8080

    - name: Check bundle size
      run: |
        cd frontend
        npm run build -- --analyze
        du -sh dist/
        echo "Bundle size check completed"

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: matrix.node-version == '18.x'
      with:
        name: frontend-dist
        path: frontend/dist/
        retention-days: 7

  accessibility-test:
    name: Accessibility Testing
    runs-on: ubuntu-latest
    needs: build-test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      run: npm ci
      working-directory: ./frontend

    - name: Build for testing
      run: npm run build
      working-directory: ./frontend
      env:
        VITE_GA_MEASUREMENT_ID: test

    - name: Serve built application
      run: |
        cd frontend
        npx serve -s dist -p 3000 &
        sleep 5
      
    - name: Install axe-core CLI
      run: npm install -g @axe-core/cli

    - name: Run accessibility tests
      run: |
        axe http://localhost:3000 --exit

  performance-test:
    name: Performance Testing
    runs-on: ubuntu-latest
    needs: build-test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      run: npm ci
      working-directory: ./frontend

    - name: Build for testing
      run: npm run build
      working-directory: ./frontend

    - name: Install Lighthouse CI
      run: npm install -g @lhci/cli@0.12.x

    - name: Serve and test with Lighthouse
      run: |
        cd frontend
        npx serve -s dist -p 3000 &
        sleep 5
        lhci autorun --upload.target=temporary-public-storage --collect.url=http://localhost:3000

  deploy-preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    needs: [lint-and-format, build-test]
    if: github.event_name == 'pull_request'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      run: npm ci
      working-directory: ./frontend

    - name: Build for preview
      run: npm run build
      working-directory: ./frontend
      env:
        VITE_GA_MEASUREMENT_ID: ${{ secrets.VITE_GA_MEASUREMENT_ID }}
        VITE_PROXY_TARGET: ${{ secrets.PREVIEW_API_URL }}

    # Example: Deploy to Netlify, Vercel, or similar service
    - name: Deploy to preview environment
      run: |
        echo "Deploy to preview environment"
        echo "Preview URL would be available here"
        # Example for Netlify:
        # npx netlify-cli deploy --dir=frontend/dist --message="PR #${{ github.event.number }}"
        
    - name: Comment preview URL
      uses: actions/github-script@v6
      if: github.event_name == 'pull_request'
      with:
        script: |
          const { data: comments } = await github.rest.issues.listComments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
          });
          
          const botComment = comments.find(comment => 
            comment.user.type === 'Bot' && comment.body.includes('Preview deployed')
          );
          
          const body = `🚀 **Preview deployed successfully!**
          
          📱 Frontend Preview: [View Preview](https://preview-${context.issue.number}.your-domain.com)
          📊 Build: ${{ github.run_number }}
          📝 Commit: ${context.sha.substring(0, 7)}
          
          The preview will be updated on every push to this PR.`;
          
          if (botComment) {
            github.rest.issues.updateComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: botComment.id,
              body: body
            });
          } else {
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: body
            });
          }